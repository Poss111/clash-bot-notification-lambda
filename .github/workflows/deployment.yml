name: Deployment

on:
  push:
    tags:
      - 'v*'
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Check
        run : echo build $GITHUB_RUN_NUMBER

      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image Start Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Notification Lambda Deployment Notification'
          message: 'Starting Docker Image build...'
          message-color: '15258703'

      - name: Build, tag, and push Clash-Bot image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: poss11111/clash-bot-notification-lambda
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deployment In Progress Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ success()}}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Notification Lambda Deployment Notification'
          message: 'Deployment in progress...'
          message-color: '16750902'

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: ClashBotNotificationLambdaStack
          template: ClashBotNotificationLambda.yml
          parameter-overrides: >- 
            Image=${{ steps.build-image.outputs.image }},
            Role=${{ secrets.AWS_LAMBDA_ROLE }},
            Timeout=30,
            CronExpression=cron(0 13 ? * 2 *),
            LambdaSecurityGroup=${{ secrets.AWS_SG }},
            LambdaSubnet=${{ secrets.AWS_SUBNET }}

      - name: Deployment Failed Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ failure() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Notification Lambda Deployment Notification'
          message: 'Deployment failed!'
          message-color: '16711680'

      - name: Deployment Succeeded Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ success() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Notification Lambda Deployment Notification'
          message: 'Deployment succeeded!'
          message-color: '65345'
